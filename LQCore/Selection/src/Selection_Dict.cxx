//
// File generated by /programs/root/bin/rootcint at Thu Nov 14 09:23:54 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdISelection_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Selection_Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BaseSelection BaseSelection;
      #else
      class BaseSelection  {
         public:
         //friend XX;
         int ifid; //
         bool etaPt; //
         bool RelIsod0Chi2; //
         bool DepositVeto; //
         bool individual; //
         bool RelIsod0; //fiducial;//muonid,pTcut,isIso;
         double LeptonRelIso; //
         double dxy; //
         double dz; //
         double D0; //
         double D0Error; //
         double D0Significance; //
         double Vxy; //
         double Vz; //
         double LeptonchiNdof; //
         int numlep; //
         bool jetIsOK; //
         double pt_cut_min; //
         double pt_cut_max; //
         double eta_cut_min; //
         double eta_cut; //
         double jpt_cut_min; //
         double jpt_cut_max; //
         double jeta_cut_min; //
         double jeta_cut; //
         double relIso_cut; //
         double relIsoMIN_cut; //
         double chiNdof_cut; //
         double chiNdofMIN_cut; //
         double dxy_cut; //
         double dxyMIN_cut; //
         double dz_cut; //
         int casediscriminator; //
         int simpleselection; //
         ::LQEvent k_lqevent; //
         bool apply_ptcut; //
         bool apply_etacut; //
         bool apply_jptcut; //
         bool apply_jetacut; //
         bool apply_relisocut; //
         bool apply_chi2cut; //
         bool apply_dxycut; //
         bool apply_dzcut; //
         bool apply_general; //
         bool apply_deposit; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ElectronSelection ElectronSelection;
      #else
      class ElectronSelection  :  public ::BaseSelection {
         public:
         //friend XX;
         bool ElectronID; //
         double PHONH[7]; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MuonSelection MuonSelection;
      #else
      class MuonSelection  :  public ::BaseSelection {
         public:
         //friend XX;
         double ECalDeposit_max; //
         double HCalDeposit_max; //
         double ECalDeposit_min; //
         double HCalDeposit_min; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TauSelection TauSelection;
      #else
      class TauSelection  :  public ::BaseSelection {
         public:
         //friend XX;
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::JetSelection JetSelection;
      #else
      class JetSelection  :  public ::BaseSelection {
         public:
         //friend XX;
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::GenSelection GenSelection;
      #else
      class GenSelection  :  public ::BaseSelection {
         public:
         //friend XX;
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::EventSelection EventSelection;
      #else
      class EventSelection  :  public ::BaseSelection {
         public:
         //friend XX;
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::EventBase EventBase;
      #else
      class EventBase  {
         public:
         //friend XX;
         ::LQEvent k_LQevent; //
         ::MuonSelection* k_muonsel; //
         ::ElectronSelection* k_electronsel; //
         ::JetSelection* k_jetsel; //
         ::TauSelection* k_tausel; //
         ::GenSelection* k_truthsel; //
         ::EventSelection* k_eventsel; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void BaseSelection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BaseSelection_Dictionary();
   static void *new_BaseSelection(void *p = 0);
   static void *newArray_BaseSelection(Long_t size, void *p);
   static void delete_BaseSelection(void *p);
   static void deleteArray_BaseSelection(void *p);
   static void destruct_BaseSelection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BaseSelection*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BaseSelection) == sizeof(::ROOT::Shadow::BaseSelection));
      ::BaseSelection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BaseSelection),0);
      static ::ROOT::TGenericClassInfo 
         instance("BaseSelection", "./include/BaseSelection.h", 21,
                  typeid(::BaseSelection), DefineBehavior(ptr, ptr),
                  &BaseSelection_ShowMembers, &BaseSelection_Dictionary, isa_proxy, 4,
                  sizeof(::BaseSelection) );
      instance.SetNew(&new_BaseSelection);
      instance.SetNewArray(&newArray_BaseSelection);
      instance.SetDelete(&delete_BaseSelection);
      instance.SetDeleteArray(&deleteArray_BaseSelection);
      instance.SetDestructor(&destruct_BaseSelection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BaseSelection*)
   {
      return GenerateInitInstanceLocal((::BaseSelection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BaseSelection*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BaseSelection_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BaseSelection*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ElectronSelection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ElectronSelection_Dictionary();
   static void delete_ElectronSelection(void *p);
   static void deleteArray_ElectronSelection(void *p);
   static void destruct_ElectronSelection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ElectronSelection*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ElectronSelection) == sizeof(::ROOT::Shadow::ElectronSelection));
      ::ElectronSelection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ElectronSelection),0);
      static ::ROOT::TGenericClassInfo 
         instance("ElectronSelection", "./include/ElectronSelection.h", 8,
                  typeid(::ElectronSelection), DefineBehavior(ptr, ptr),
                  &ElectronSelection_ShowMembers, &ElectronSelection_Dictionary, isa_proxy, 4,
                  sizeof(::ElectronSelection) );
      instance.SetDelete(&delete_ElectronSelection);
      instance.SetDeleteArray(&deleteArray_ElectronSelection);
      instance.SetDestructor(&destruct_ElectronSelection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ElectronSelection*)
   {
      return GenerateInitInstanceLocal((::ElectronSelection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ElectronSelection*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ElectronSelection_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ElectronSelection*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void MuonSelection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MuonSelection_Dictionary();
   static void delete_MuonSelection(void *p);
   static void deleteArray_MuonSelection(void *p);
   static void destruct_MuonSelection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonSelection*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MuonSelection) == sizeof(::ROOT::Shadow::MuonSelection));
      ::MuonSelection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MuonSelection),0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonSelection", "./include/MuonSelection.h", 7,
                  typeid(::MuonSelection), DefineBehavior(ptr, ptr),
                  &MuonSelection_ShowMembers, &MuonSelection_Dictionary, isa_proxy, 4,
                  sizeof(::MuonSelection) );
      instance.SetDelete(&delete_MuonSelection);
      instance.SetDeleteArray(&deleteArray_MuonSelection);
      instance.SetDestructor(&destruct_MuonSelection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MuonSelection*)
   {
      return GenerateInitInstanceLocal((::MuonSelection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonSelection*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MuonSelection_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MuonSelection*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TauSelection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TauSelection_Dictionary();
   static void *new_TauSelection(void *p = 0);
   static void *newArray_TauSelection(Long_t size, void *p);
   static void delete_TauSelection(void *p);
   static void deleteArray_TauSelection(void *p);
   static void destruct_TauSelection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TauSelection*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TauSelection) == sizeof(::ROOT::Shadow::TauSelection));
      ::TauSelection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TauSelection),0);
      static ::ROOT::TGenericClassInfo 
         instance("TauSelection", "./include/TauSelection.h", 7,
                  typeid(::TauSelection), DefineBehavior(ptr, ptr),
                  &TauSelection_ShowMembers, &TauSelection_Dictionary, isa_proxy, 4,
                  sizeof(::TauSelection) );
      instance.SetNew(&new_TauSelection);
      instance.SetNewArray(&newArray_TauSelection);
      instance.SetDelete(&delete_TauSelection);
      instance.SetDeleteArray(&deleteArray_TauSelection);
      instance.SetDestructor(&destruct_TauSelection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TauSelection*)
   {
      return GenerateInitInstanceLocal((::TauSelection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TauSelection*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TauSelection_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TauSelection*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void JetSelection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void JetSelection_Dictionary();
   static void delete_JetSelection(void *p);
   static void deleteArray_JetSelection(void *p);
   static void destruct_JetSelection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JetSelection*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::JetSelection) == sizeof(::ROOT::Shadow::JetSelection));
      ::JetSelection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::JetSelection),0);
      static ::ROOT::TGenericClassInfo 
         instance("JetSelection", "./include/JetSelection.h", 16,
                  typeid(::JetSelection), DefineBehavior(ptr, ptr),
                  &JetSelection_ShowMembers, &JetSelection_Dictionary, isa_proxy, 4,
                  sizeof(::JetSelection) );
      instance.SetDelete(&delete_JetSelection);
      instance.SetDeleteArray(&deleteArray_JetSelection);
      instance.SetDestructor(&destruct_JetSelection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JetSelection*)
   {
      return GenerateInitInstanceLocal((::JetSelection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JetSelection*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void JetSelection_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::JetSelection*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void GenSelection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void GenSelection_Dictionary();
   static void *new_GenSelection(void *p = 0);
   static void *newArray_GenSelection(Long_t size, void *p);
   static void delete_GenSelection(void *p);
   static void deleteArray_GenSelection(void *p);
   static void destruct_GenSelection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GenSelection*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::GenSelection) == sizeof(::ROOT::Shadow::GenSelection));
      ::GenSelection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::GenSelection),0);
      static ::ROOT::TGenericClassInfo 
         instance("GenSelection", "./include/GenSelection.h", 10,
                  typeid(::GenSelection), DefineBehavior(ptr, ptr),
                  &GenSelection_ShowMembers, &GenSelection_Dictionary, isa_proxy, 4,
                  sizeof(::GenSelection) );
      instance.SetNew(&new_GenSelection);
      instance.SetNewArray(&newArray_GenSelection);
      instance.SetDelete(&delete_GenSelection);
      instance.SetDeleteArray(&deleteArray_GenSelection);
      instance.SetDestructor(&destruct_GenSelection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GenSelection*)
   {
      return GenerateInitInstanceLocal((::GenSelection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GenSelection*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void GenSelection_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::GenSelection*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void EventSelection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void EventSelection_Dictionary();
   static void *new_EventSelection(void *p = 0);
   static void *newArray_EventSelection(Long_t size, void *p);
   static void delete_EventSelection(void *p);
   static void deleteArray_EventSelection(void *p);
   static void destruct_EventSelection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EventSelection*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::EventSelection) == sizeof(::ROOT::Shadow::EventSelection));
      ::EventSelection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::EventSelection),0);
      static ::ROOT::TGenericClassInfo 
         instance("EventSelection", "./include/EventSelection.h", 7,
                  typeid(::EventSelection), DefineBehavior(ptr, ptr),
                  &EventSelection_ShowMembers, &EventSelection_Dictionary, isa_proxy, 4,
                  sizeof(::EventSelection) );
      instance.SetNew(&new_EventSelection);
      instance.SetNewArray(&newArray_EventSelection);
      instance.SetDelete(&delete_EventSelection);
      instance.SetDeleteArray(&deleteArray_EventSelection);
      instance.SetDestructor(&destruct_EventSelection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EventSelection*)
   {
      return GenerateInitInstanceLocal((::EventSelection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventSelection*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void EventSelection_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::EventSelection*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void EventBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void EventBase_Dictionary();
   static void *new_EventBase(void *p = 0);
   static void *newArray_EventBase(Long_t size, void *p);
   static void delete_EventBase(void *p);
   static void deleteArray_EventBase(void *p);
   static void destruct_EventBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EventBase*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::EventBase) == sizeof(::ROOT::Shadow::EventBase));
      ::EventBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::EventBase),0);
      static ::ROOT::TGenericClassInfo 
         instance("EventBase", "./include/EventBase.h", 26,
                  typeid(::EventBase), DefineBehavior(ptr, ptr),
                  &EventBase_ShowMembers, &EventBase_Dictionary, isa_proxy, 4,
                  sizeof(::EventBase) );
      instance.SetNew(&new_EventBase);
      instance.SetNewArray(&newArray_EventBase);
      instance.SetDelete(&delete_EventBase);
      instance.SetDeleteArray(&deleteArray_EventBase);
      instance.SetDestructor(&destruct_EventBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EventBase*)
   {
      return GenerateInitInstanceLocal((::EventBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void EventBase_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::EventBase*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void BaseSelection_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BaseSelection.
      typedef ::ROOT::Shadow::BaseSelection ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BaseSelection*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ifid", &sobj->ifid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etaPt", &sobj->etaPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RelIsod0Chi2", &sobj->RelIsod0Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DepositVeto", &sobj->DepositVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "individual", &sobj->individual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RelIsod0", &sobj->RelIsod0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LeptonRelIso", &sobj->LeptonRelIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dxy", &sobj->dxy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz", &sobj->dz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "D0", &sobj->D0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "D0Error", &sobj->D0Error);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "D0Significance", &sobj->D0Significance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vxy", &sobj->Vxy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vz", &sobj->Vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LeptonchiNdof", &sobj->LeptonchiNdof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numlep", &sobj->numlep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetIsOK", &sobj->jetIsOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt_cut_min", &sobj->pt_cut_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt_cut_max", &sobj->pt_cut_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta_cut_min", &sobj->eta_cut_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta_cut", &sobj->eta_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jpt_cut_min", &sobj->jpt_cut_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jpt_cut_max", &sobj->jpt_cut_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jeta_cut_min", &sobj->jeta_cut_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jeta_cut", &sobj->jeta_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "relIso_cut", &sobj->relIso_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "relIsoMIN_cut", &sobj->relIsoMIN_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chiNdof_cut", &sobj->chiNdof_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chiNdofMIN_cut", &sobj->chiNdofMIN_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dxy_cut", &sobj->dxy_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dxyMIN_cut", &sobj->dxyMIN_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz_cut", &sobj->dz_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "casediscriminator", &sobj->casediscriminator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "simpleselection", &sobj->simpleselection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "k_lqevent", (void*)&sobj->k_lqevent);
      R__insp.InspectMember("LQEvent", (void*)&sobj->k_lqevent, "k_lqevent.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apply_ptcut", &sobj->apply_ptcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apply_etacut", &sobj->apply_etacut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apply_jptcut", &sobj->apply_jptcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apply_jetacut", &sobj->apply_jetacut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apply_relisocut", &sobj->apply_relisocut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apply_chi2cut", &sobj->apply_chi2cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apply_dxycut", &sobj->apply_dxycut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apply_dzcut", &sobj->apply_dzcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apply_general", &sobj->apply_general);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apply_deposit", &sobj->apply_deposit);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BaseSelection(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BaseSelection : new ::BaseSelection;
   }
   static void *newArray_BaseSelection(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BaseSelection[nElements] : new ::BaseSelection[nElements];
   }
   // Wrapper around operator delete
   static void delete_BaseSelection(void *p) {
      delete ((::BaseSelection*)p);
   }
   static void deleteArray_BaseSelection(void *p) {
      delete [] ((::BaseSelection*)p);
   }
   static void destruct_BaseSelection(void *p) {
      typedef ::BaseSelection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BaseSelection

//______________________________________________________________________________
namespace ROOT {
   void ElectronSelection_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ElectronSelection.
      typedef ::ROOT::Shadow::ElectronSelection ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ElectronSelection*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElectronID", &sobj->ElectronID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PHONH[7]", sobj->PHONH);
      R__insp.GenericShowMembers("BaseSelection", ( ::BaseSelection * )( (::ElectronSelection*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ElectronSelection(void *p) {
      delete ((::ElectronSelection*)p);
   }
   static void deleteArray_ElectronSelection(void *p) {
      delete [] ((::ElectronSelection*)p);
   }
   static void destruct_ElectronSelection(void *p) {
      typedef ::ElectronSelection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ElectronSelection

//______________________________________________________________________________
namespace ROOT {
   void EventBase_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class EventBase.
      typedef ::ROOT::Shadow::EventBase ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::EventBase*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "k_LQevent", (void*)&sobj->k_LQevent);
      R__insp.InspectMember("LQEvent", (void*)&sobj->k_LQevent, "k_LQevent.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*k_muonsel", &sobj->k_muonsel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*k_electronsel", &sobj->k_electronsel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*k_jetsel", &sobj->k_jetsel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*k_tausel", &sobj->k_tausel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*k_truthsel", &sobj->k_truthsel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*k_eventsel", &sobj->k_eventsel);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_EventBase(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventBase : new ::EventBase;
   }
   static void *newArray_EventBase(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventBase[nElements] : new ::EventBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventBase(void *p) {
      delete ((::EventBase*)p);
   }
   static void deleteArray_EventBase(void *p) {
      delete [] ((::EventBase*)p);
   }
   static void destruct_EventBase(void *p) {
      typedef ::EventBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EventBase

//______________________________________________________________________________
namespace ROOT {
   void EventSelection_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class EventSelection.
      typedef ::ROOT::Shadow::EventSelection ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::EventSelection*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("BaseSelection", ( ::BaseSelection * )( (::EventSelection*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_EventSelection(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventSelection : new ::EventSelection;
   }
   static void *newArray_EventSelection(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventSelection[nElements] : new ::EventSelection[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventSelection(void *p) {
      delete ((::EventSelection*)p);
   }
   static void deleteArray_EventSelection(void *p) {
      delete [] ((::EventSelection*)p);
   }
   static void destruct_EventSelection(void *p) {
      typedef ::EventSelection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EventSelection

//______________________________________________________________________________
namespace ROOT {
   void GenSelection_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class GenSelection.
      typedef ::ROOT::Shadow::GenSelection ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::GenSelection*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("BaseSelection", ( ::BaseSelection * )( (::GenSelection*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GenSelection(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::GenSelection : new ::GenSelection;
   }
   static void *newArray_GenSelection(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::GenSelection[nElements] : new ::GenSelection[nElements];
   }
   // Wrapper around operator delete
   static void delete_GenSelection(void *p) {
      delete ((::GenSelection*)p);
   }
   static void deleteArray_GenSelection(void *p) {
      delete [] ((::GenSelection*)p);
   }
   static void destruct_GenSelection(void *p) {
      typedef ::GenSelection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GenSelection

//______________________________________________________________________________
namespace ROOT {
   void JetSelection_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class JetSelection.
      typedef ::ROOT::Shadow::JetSelection ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::JetSelection*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("BaseSelection", ( ::BaseSelection * )( (::JetSelection*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_JetSelection(void *p) {
      delete ((::JetSelection*)p);
   }
   static void deleteArray_JetSelection(void *p) {
      delete [] ((::JetSelection*)p);
   }
   static void destruct_JetSelection(void *p) {
      typedef ::JetSelection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JetSelection

//______________________________________________________________________________
namespace ROOT {
   void MuonSelection_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MuonSelection.
      typedef ::ROOT::Shadow::MuonSelection ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::MuonSelection*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ECalDeposit_max", &sobj->ECalDeposit_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HCalDeposit_max", &sobj->HCalDeposit_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ECalDeposit_min", &sobj->ECalDeposit_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HCalDeposit_min", &sobj->HCalDeposit_min);
      R__insp.GenericShowMembers("BaseSelection", ( ::BaseSelection * )( (::MuonSelection*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MuonSelection(void *p) {
      delete ((::MuonSelection*)p);
   }
   static void deleteArray_MuonSelection(void *p) {
      delete [] ((::MuonSelection*)p);
   }
   static void destruct_MuonSelection(void *p) {
      typedef ::MuonSelection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MuonSelection

//______________________________________________________________________________
namespace ROOT {
   void TauSelection_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TauSelection.
      typedef ::ROOT::Shadow::TauSelection ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TauSelection*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("BaseSelection", ( ::BaseSelection * )( (::TauSelection*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TauSelection(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TauSelection : new ::TauSelection;
   }
   static void *newArray_TauSelection(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TauSelection[nElements] : new ::TauSelection[nElements];
   }
   // Wrapper around operator delete
   static void delete_TauSelection(void *p) {
      delete ((::TauSelection*)p);
   }
   static void deleteArray_TauSelection(void *p) {
      delete [] ((::TauSelection*)p);
   }
   static void destruct_TauSelection(void *p) {
      typedef ::TauSelection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TauSelection

/********************************************************
* src/Selection_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSelection_Dict();

extern "C" void G__set_cpp_environmentSelection_Dict() {
  G__cpp_reset_tagtableSelection_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevSelection_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* BaseSelection */
static int G__Selection_Dict_677_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BaseSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BaseSelection[n];
     } else {
       p = new((void*) gvp) BaseSelection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BaseSelection;
     } else {
       p = new((void*) gvp) BaseSelection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const BaseSelection& obj = ((BaseSelection*) G__getstructoffset())->operator=(*(BaseSelection*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BaseSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BaseSelection(*(BaseSelection*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) BaseSelection(*(BaseSelection*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetPt((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetPt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetJetPt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetEta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetJetEta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetEta((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetRelIso((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetRelIso((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetChiNdof((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetChiNdof((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetBSdxy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetBSdxy((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_677_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseSelection*) G__getstructoffset())->SetBSdz((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BaseSelection G__TBaseSelection;
static int G__Selection_Dict_677_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BaseSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BaseSelection*) (soff+(sizeof(BaseSelection)*i)))->~G__TBaseSelection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BaseSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BaseSelection*) (soff))->~G__TBaseSelection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ElectronSelection */
static int G__Selection_Dict_678_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ElectronSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ElectronSelection(*((LQEvent*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ElectronSelection(*((LQEvent*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_ElectronSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_678_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ElectronSelection& obj = ((ElectronSelection*) G__getstructoffset())->operator=(*(ElectronSelection*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_678_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ElectronSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ElectronSelection(*(ElectronSelection*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ElectronSelection(*(ElectronSelection*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_ElectronSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_678_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ElectronSelection*) G__getstructoffset())->Selection(*(vector<snu::KElectron>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ElectronSelection G__TElectronSelection;
static int G__Selection_Dict_678_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ElectronSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ElectronSelection*) (soff+(sizeof(ElectronSelection)*i)))->~G__TElectronSelection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ElectronSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ElectronSelection*) (soff))->~G__TElectronSelection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MuonSelection */
static int G__Selection_Dict_679_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MuonSelection(*((LQEvent*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) MuonSelection(*((LQEvent*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_MuonSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_679_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MuonSelection& obj = ((MuonSelection*) G__getstructoffset())->operator=(*(MuonSelection*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_679_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MuonSelection(*(MuonSelection*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MuonSelection(*(MuonSelection*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_MuonSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_679_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSelection*) G__getstructoffset())->Selection(*(vector<snu::KMuon>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_679_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSelection*) G__getstructoffset())->HNTightMuonSelection(*(vector<snu::KMuon>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_679_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSelection*) G__getstructoffset())->HNLooseMuonSelection(*(vector<snu::KMuon>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_679_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSelection*) G__getstructoffset())->SetDeposits((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_679_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSelection*) G__getstructoffset())->SetDeposits((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonSelection G__TMuonSelection;
static int G__Selection_Dict_679_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonSelection*) (soff+(sizeof(MuonSelection)*i)))->~G__TMuonSelection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonSelection*) (soff))->~G__TMuonSelection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TauSelection */
static int G__Selection_Dict_680_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TauSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TauSelection[n];
     } else {
       p = new((void*) gvp) TauSelection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TauSelection;
     } else {
       p = new((void*) gvp) TauSelection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_TauSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_680_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TauSelection*) G__getstructoffset())->Selection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Selection_Dict_680_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TauSelection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TauSelection(*(TauSelection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_TauSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TauSelection G__TTauSelection;
static int G__Selection_Dict_680_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TauSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TauSelection*) (soff+(sizeof(TauSelection)*i)))->~G__TTauSelection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TauSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TauSelection*) (soff))->~G__TTauSelection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Selection_Dict_680_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TauSelection* dest = (TauSelection*) G__getstructoffset();
   *dest = *(TauSelection*) libp->para[0].ref;
   const TauSelection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JetSelection */
static int G__Selection_Dict_681_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JetSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JetSelection(*((LQEvent*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) JetSelection(*((LQEvent*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_JetSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_681_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const JetSelection& obj = ((JetSelection*) G__getstructoffset())->operator=(*(JetSelection*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_681_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JetSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JetSelection(*(JetSelection*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) JetSelection(*(JetSelection*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_JetSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_681_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JetSelection*) G__getstructoffset())->Selection(*(vector<snu::KJet>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_681_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JetSelection*) G__getstructoffset())->JetSelectionLeptonVeto(*(vector<snu::KJet>*) libp->para[0].ref, *((vector<snu::KMuon>*) G__int(libp->para[1]))
, *((vector<snu::KElectron>*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JetSelection G__TJetSelection;
static int G__Selection_Dict_681_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JetSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JetSelection*) (soff+(sizeof(JetSelection)*i)))->~G__TJetSelection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JetSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JetSelection*) (soff))->~G__TJetSelection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GenSelection */
static int G__Selection_Dict_682_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GenSelection(*((LQEvent*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) GenSelection(*((LQEvent*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_GenSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_682_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenSelection[n];
     } else {
       p = new((void*) gvp) GenSelection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenSelection;
     } else {
       p = new((void*) gvp) GenSelection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_GenSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_682_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const GenSelection& obj = ((GenSelection*) G__getstructoffset())->operator=(*(GenSelection*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_682_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GenSelection(*(GenSelection*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) GenSelection(*(GenSelection*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_GenSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_682_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenSelection*) G__getstructoffset())->Selection(*(vector<snu::KTruth>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GenSelection G__TGenSelection;
static int G__Selection_Dict_682_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GenSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GenSelection*) (soff+(sizeof(GenSelection)*i)))->~G__TGenSelection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GenSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GenSelection*) (soff))->~G__TGenSelection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventSelection */
static int G__Selection_Dict_683_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventSelection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventSelection[n];
     } else {
       p = new((void*) gvp) EventSelection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventSelection;
     } else {
       p = new((void*) gvp) EventSelection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_EventSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_683_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventSelection*) G__getstructoffset())->Selection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Selection_Dict_683_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EventSelection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EventSelection(*(EventSelection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_EventSelection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventSelection G__TEventSelection;
static int G__Selection_Dict_683_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventSelection*) (soff+(sizeof(EventSelection)*i)))->~G__TEventSelection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventSelection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventSelection*) (soff))->~G__TEventSelection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Selection_Dict_683_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventSelection* dest = (EventSelection*) G__getstructoffset();
   *dest = *(EventSelection*) libp->para[0].ref;
   const EventSelection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventBase */
static int G__Selection_Dict_684_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventBase[n];
     } else {
       p = new((void*) gvp) EventBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventBase;
     } else {
       p = new((void*) gvp) EventBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_EventBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EventBase(*((LQEvent*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) EventBase(*((LQEvent*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_EventBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EventBase(*(EventBase*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) EventBase(*(EventBase*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_EventBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EventBase& obj = ((EventBase*) G__getstructoffset())->operator=(*(EventBase*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EventBase*) G__getstructoffset())->GetMuonSel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EventBase*) G__getstructoffset())->GetElectronSel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EventBase*) G__getstructoffset())->GetJetSel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EventBase*) G__getstructoffset())->GetTauSel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EventBase*) G__getstructoffset())->GetTruthSel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EventBase*) G__getstructoffset())->GetEventSel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<snu::KMuon>* pobj;
         const vector<snu::KMuon> xobj = ((const EventBase*) G__getstructoffset())->GetBaseMuons();
         pobj = new vector<snu::KMuon>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<snu::KElectron>* pobj;
         const vector<snu::KElectron> xobj = ((const EventBase*) G__getstructoffset())->GetBaseElectrons();
         pobj = new vector<snu::KElectron>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<snu::KJet>* pobj;
         const vector<snu::KJet> xobj = ((const EventBase*) G__getstructoffset())->GetBaseJets();
         pobj = new vector<snu::KJet>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<snu::KTau>* pobj;
         const vector<snu::KTau> xobj = ((const EventBase*) G__getstructoffset())->GetBaseTaus();
         pobj = new vector<snu::KTau>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<snu::KTruth>* pobj;
         const vector<snu::KTruth> xobj = ((const EventBase*) G__getstructoffset())->GetBaseTruth();
         pobj = new vector<snu::KTruth>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const snu::KEvent* pobj;
         const snu::KEvent xobj = ((const EventBase*) G__getstructoffset())->GetBaseEvent();
         pobj = new snu::KEvent(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EventBase(*(EventBase*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) EventBase(*(EventBase*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Selection_DictLN_EventBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Selection_Dict_684_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const LQEvent* pobj;
         const LQEvent xobj = ((const EventBase*) G__getstructoffset())->GetEventBase();
         pobj = new LQEvent(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventBase G__TEventBase;
static int G__Selection_Dict_684_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventBase*) (soff+(sizeof(EventBase)*i)))->~G__TEventBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventBase*) (soff))->~G__TEventBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* BaseSelection */

/* ElectronSelection */

/* MuonSelection */

/* TauSelection */

/* JetSelection */

/* GenSelection */

/* EventSelection */

/* EventBase */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSelection_Dict {
 public:
  G__Sizep2memfuncSelection_Dict(): p(&G__Sizep2memfuncSelection_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSelection_Dict::*p)();
};

size_t G__get_sizep2memfuncSelection_Dict()
{
  G__Sizep2memfuncSelection_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSelection_Dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Selection_DictLN_ElectronSelection))) {
     ElectronSelection *G__Lderived;
     G__Lderived=(ElectronSelection*)0x1000;
     {
       BaseSelection *G__Lpbase=(BaseSelection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Selection_DictLN_ElectronSelection),G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Selection_DictLN_MuonSelection))) {
     MuonSelection *G__Lderived;
     G__Lderived=(MuonSelection*)0x1000;
     {
       BaseSelection *G__Lpbase=(BaseSelection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Selection_DictLN_MuonSelection),G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Selection_DictLN_TauSelection))) {
     TauSelection *G__Lderived;
     G__Lderived=(TauSelection*)0x1000;
     {
       BaseSelection *G__Lpbase=(BaseSelection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Selection_DictLN_TauSelection),G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Selection_DictLN_JetSelection))) {
     JetSelection *G__Lderived;
     G__Lderived=(JetSelection*)0x1000;
     {
       BaseSelection *G__Lpbase=(BaseSelection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Selection_DictLN_JetSelection),G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Selection_DictLN_GenSelection))) {
     GenSelection *G__Lderived;
     G__Lderived=(GenSelection*)0x1000;
     {
       BaseSelection *G__Lpbase=(BaseSelection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Selection_DictLN_GenSelection),G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Selection_DictLN_EventSelection))) {
     EventSelection *G__Lderived;
     G__Lderived=(EventSelection*)0x1000;
     {
       BaseSelection *G__Lpbase=(BaseSelection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Selection_DictLN_EventSelection),G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSelection_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Selection_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Selection_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__Selection_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__Selection_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__Selection_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__Selection_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__Selection_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__Selection_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__Selection_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<float> >",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float> >",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int> >",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Bool_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEboolcOallocatorlEboolgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<snu::KParticle>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKParticlecOallocatorlEsnucLcLKParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKParticlecOallocatorlEsnucLcLKParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKParticlecOallocatorlEsnucLcLKParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKParticlecOallocatorlEsnucLcLKParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKParticlecOallocatorlEsnucLcLKParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<snu::KMuon>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<snu::KElectron>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<snu::KTau>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<snu::KJet>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<snu::KTruth>",117,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* BaseSelection */
static void G__setup_memvarBaseSelection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection));
   { BaseSelection *p; p=(BaseSelection*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ifid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ifid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etaPt)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"etaPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RelIsod0Chi2)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"RelIsod0Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DepositVeto)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"DepositVeto=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->individual)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"individual=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RelIsod0)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"RelIsod0=",0,"fiducial;//muonid,pTcut,isIso;");
   G__memvar_setup((void*)((long)(&p->LeptonRelIso)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"LeptonRelIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dxy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dxy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->D0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"D0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->D0Error)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"D0Error=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->D0Significance)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"D0Significance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vxy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vxy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LeptonchiNdof)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"LeptonchiNdof=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numlep)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"numlep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetIsOK)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"jetIsOK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt_cut_min)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pt_cut_min=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt_cut_max)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pt_cut_max=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta_cut_min)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eta_cut_min=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta_cut)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eta_cut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jpt_cut_min)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"jpt_cut_min=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jpt_cut_max)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"jpt_cut_max=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jeta_cut_min)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"jeta_cut_min=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jeta_cut)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"jeta_cut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->relIso_cut)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"relIso_cut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->relIsoMIN_cut)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"relIsoMIN_cut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chiNdof_cut)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"chiNdof_cut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chiNdofMIN_cut)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"chiNdofMIN_cut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dxy_cut)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dxy_cut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dxyMIN_cut)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dxyMIN_cut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dz_cut)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dz_cut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->casediscriminator)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"casediscriminator=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->simpleselection)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"simpleselection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->k_lqevent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Selection_DictLN_LQEvent),-1,-1,1,"k_lqevent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->apply_ptcut)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"apply_ptcut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->apply_etacut)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"apply_etacut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->apply_jptcut)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"apply_jptcut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->apply_jetacut)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"apply_jetacut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->apply_relisocut)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"apply_relisocut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->apply_chi2cut)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"apply_chi2cut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->apply_dxycut)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"apply_dxycut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->apply_dzcut)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"apply_dzcut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->apply_general)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"apply_general=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->apply_deposit)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"apply_deposit=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ElectronSelection */
static void G__setup_memvarElectronSelection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Selection_DictLN_ElectronSelection));
   { ElectronSelection *p; p=(ElectronSelection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"ElectronID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"PHONH[7]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MuonSelection */
static void G__setup_memvarMuonSelection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Selection_DictLN_MuonSelection));
   { MuonSelection *p; p=(MuonSelection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ECalDeposit_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"HCalDeposit_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ECalDeposit_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"HCalDeposit_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"AreaTrackerMu[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"AreaEcalMu[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"AreaHcalMu[5]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TauSelection */
static void G__setup_memvarTauSelection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Selection_DictLN_TauSelection));
   { TauSelection *p; p=(TauSelection*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* JetSelection */
static void G__setup_memvarJetSelection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Selection_DictLN_JetSelection));
   { JetSelection *p; p=(JetSelection*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* GenSelection */
static void G__setup_memvarGenSelection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Selection_DictLN_GenSelection));
   { GenSelection *p; p=(GenSelection*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* EventSelection */
static void G__setup_memvarEventSelection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Selection_DictLN_EventSelection));
   { EventSelection *p; p=(EventSelection*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* EventBase */
static void G__setup_memvarEventBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Selection_DictLN_EventBase));
   { EventBase *p; p=(EventBase*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->k_LQevent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Selection_DictLN_LQEvent),-1,-1,1,"k_LQevent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->k_muonsel)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Selection_DictLN_MuonSelection),-1,-1,1,"k_muonsel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->k_electronsel)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Selection_DictLN_ElectronSelection),-1,-1,1,"k_electronsel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->k_jetsel)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Selection_DictLN_JetSelection),-1,-1,1,"k_jetsel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->k_tausel)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Selection_DictLN_TauSelection),-1,-1,1,"k_tausel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->k_truthsel)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Selection_DictLN_GenSelection),-1,-1,1,"k_truthsel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->k_eventsel)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Selection_DictLN_EventSelection),-1,-1,1,"k_eventsel=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSelection_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBaseSelection(void) {
   /* BaseSelection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection));
   G__memfunc_setup("BaseSelection",1313,G__Selection_Dict_677_0_1, 105, G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Selection_Dict_677_0_2, 117, G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection), -1, 1, 1, 1, 1, 0, "u 'BaseSelection' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BaseSelection",1313,G__Selection_Dict_677_0_3, 105, G__get_linked_tagnum(&G__Selection_DictLN_BaseSelection), -1, 0, 1, 1, 1, 0, "u 'BaseSelection' - 11 - bs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__Selection_Dict_677_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPt",496,G__Selection_Dict_677_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - minPt d - 'Double_t' 0 - maxPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPt",496,G__Selection_Dict_677_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - minPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJetPt",787,G__Selection_Dict_677_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - minPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEta",582,G__Selection_Dict_677_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Eta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJetEta",873,G__Selection_Dict_677_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Eta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEta",582,G__Selection_Dict_677_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - minEta d - 'Double_t' 0 - Eta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRelIso",890,G__Selection_Dict_677_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - RelIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRelIso",890,G__Selection_Dict_677_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - RelIsoMIN d - 'Double_t' 0 - RelIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiNdof",967,G__Selection_Dict_677_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ChiNdof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiNdof",967,G__Selection_Dict_677_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - ChiNdofMIN d - 'Double_t' 0 - ChiNdof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBSdxy",790,G__Selection_Dict_677_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dxy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBSdxy",790,G__Selection_Dict_677_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - dxyMIN d - 'Double_t' 0 - dxy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBSdz",671,G__Selection_Dict_677_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dz", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BaseSelection", 1439, G__Selection_Dict_677_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncElectronSelection(void) {
   /* ElectronSelection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Selection_DictLN_ElectronSelection));
   G__memfunc_setup("ElectronSelection",1762,G__Selection_Dict_678_0_1, 105, G__get_linked_tagnum(&G__Selection_DictLN_ElectronSelection), -1, 0, 1, 1, 1, 0, "u 'LQEvent' - 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Selection_Dict_678_0_2, 117, G__get_linked_tagnum(&G__Selection_DictLN_ElectronSelection), -1, 1, 1, 1, 1, 0, "u 'ElectronSelection' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ElectronSelection",1762,G__Selection_Dict_678_0_3, 105, G__get_linked_tagnum(&G__Selection_DictLN_ElectronSelection), -1, 0, 1, 1, 1, 0, "u 'ElectronSelection' - 11 - bs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Selection",934,G__Selection_Dict_678_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<snu::KElectron,allocator<snu::KElectron> >' 'vector<snu::KElectron>' 1 - leptonColl", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ElectronSelection", 1888, G__Selection_Dict_678_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMuonSelection(void) {
   /* MuonSelection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Selection_DictLN_MuonSelection));
   G__memfunc_setup("MuonSelection",1349,G__Selection_Dict_679_0_1, 105, G__get_linked_tagnum(&G__Selection_DictLN_MuonSelection), -1, 0, 1, 1, 1, 0, "u 'LQEvent' - 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Selection_Dict_679_0_2, 117, G__get_linked_tagnum(&G__Selection_DictLN_MuonSelection), -1, 1, 1, 1, 1, 0, "u 'MuonSelection' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MuonSelection",1349,G__Selection_Dict_679_0_3, 105, G__get_linked_tagnum(&G__Selection_DictLN_MuonSelection), -1, 0, 1, 1, 1, 0, "u 'MuonSelection' - 11 - bs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Selection",934,G__Selection_Dict_679_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<snu::KMuon,allocator<snu::KMuon> >' 'vector<snu::KMuon>' 1 - leptonColl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HNTightMuonSelection",2011,G__Selection_Dict_679_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<snu::KMuon,allocator<snu::KMuon> >' 'vector<snu::KMuon>' 1 - leptonColl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HNLooseMuonSelection",2013,G__Selection_Dict_679_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<snu::KMuon,allocator<snu::KMuon> >' 'vector<snu::KMuon>' 1 - leptonColl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDeposits",1143,G__Selection_Dict_679_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - ECalDeposit d - 'Double_t' 0 - HCalDeposit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDeposits",1143,G__Selection_Dict_679_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - ECalDeposit1 d - 'Double_t' 0 - HCalDeposit1 "
"d - 'Double_t' 0 - ECalDeposit2 d - 'Double_t' 0 - HCalDeposit2", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MuonSelection", 1475, G__Selection_Dict_679_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTauSelection(void) {
   /* TauSelection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Selection_DictLN_TauSelection));
   G__memfunc_setup("TauSelection",1232,G__Selection_Dict_680_0_1, 105, G__get_linked_tagnum(&G__Selection_DictLN_TauSelection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Selection",934,G__Selection_Dict_680_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TauSelection", 1232, G__Selection_Dict_680_0_3, (int) ('i'), G__get_linked_tagnum(&G__Selection_DictLN_TauSelection), -1, 0, 1, 1, 1, 0, "u 'TauSelection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TauSelection", 1358, G__Selection_Dict_680_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Selection_Dict_680_0_5, (int) ('u'), G__get_linked_tagnum(&G__Selection_DictLN_TauSelection), -1, 1, 1, 1, 1, 0, "u 'TauSelection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJetSelection(void) {
   /* JetSelection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Selection_DictLN_JetSelection));
   G__memfunc_setup("JetSelection",1225,G__Selection_Dict_681_0_1, 105, G__get_linked_tagnum(&G__Selection_DictLN_JetSelection), -1, 0, 1, 1, 1, 0, "u 'LQEvent' - 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Selection_Dict_681_0_2, 117, G__get_linked_tagnum(&G__Selection_DictLN_JetSelection), -1, 1, 1, 1, 1, 0, "u 'JetSelection' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JetSelection",1225,G__Selection_Dict_681_0_3, 105, G__get_linked_tagnum(&G__Selection_DictLN_JetSelection), -1, 0, 1, 1, 1, 0, "u 'JetSelection' - 11 - bs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Selection",934,G__Selection_Dict_681_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<snu::KJet,allocator<snu::KJet> >' 'vector<snu::KJet>' 1 - jetColl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JetSelectionLeptonVeto",2265,G__Selection_Dict_681_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<snu::KJet,allocator<snu::KJet> >' 'vector<snu::KJet>' 1 - jetColl u 'vector<snu::KMuon,allocator<snu::KMuon> >' 'vector<snu::KMuon>' 0 - muons "
"u 'vector<snu::KElectron,allocator<snu::KElectron> >' 'vector<snu::KElectron>' 0 - electrons", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~JetSelection", 1351, G__Selection_Dict_681_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGenSelection(void) {
   /* GenSelection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Selection_DictLN_GenSelection));
   G__memfunc_setup("GenSelection",1216,G__Selection_Dict_682_0_1, 105, G__get_linked_tagnum(&G__Selection_DictLN_GenSelection), -1, 0, 1, 1, 1, 0, "u 'LQEvent' - 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenSelection",1216,G__Selection_Dict_682_0_2, 105, G__get_linked_tagnum(&G__Selection_DictLN_GenSelection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Selection_Dict_682_0_3, 117, G__get_linked_tagnum(&G__Selection_DictLN_GenSelection), -1, 1, 1, 1, 1, 0, "u 'GenSelection' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenSelection",1216,G__Selection_Dict_682_0_4, 105, G__get_linked_tagnum(&G__Selection_DictLN_GenSelection), -1, 0, 1, 1, 1, 0, "u 'GenSelection' - 11 - bs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Selection",934,G__Selection_Dict_682_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<snu::KTruth,allocator<snu::KTruth> >' 'vector<snu::KTruth>' 1 - truthColl", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GenSelection", 1342, G__Selection_Dict_682_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventSelection(void) {
   /* EventSelection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Selection_DictLN_EventSelection));
   G__memfunc_setup("EventSelection",1448,G__Selection_Dict_683_0_1, 105, G__get_linked_tagnum(&G__Selection_DictLN_EventSelection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Selection",934,G__Selection_Dict_683_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("EventSelection", 1448, G__Selection_Dict_683_0_3, (int) ('i'), G__get_linked_tagnum(&G__Selection_DictLN_EventSelection), -1, 0, 1, 1, 1, 0, "u 'EventSelection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventSelection", 1574, G__Selection_Dict_683_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Selection_Dict_683_0_5, (int) ('u'), G__get_linked_tagnum(&G__Selection_DictLN_EventSelection), -1, 1, 1, 1, 1, 0, "u 'EventSelection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventBase(void) {
   /* EventBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Selection_DictLN_EventBase));
   G__memfunc_setup("EventBase",893,G__Selection_Dict_684_0_1, 105, G__get_linked_tagnum(&G__Selection_DictLN_EventBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventBase",893,G__Selection_Dict_684_0_2, 105, G__get_linked_tagnum(&G__Selection_DictLN_EventBase), -1, 0, 1, 1, 1, 0, "u 'LQEvent' - 0 - kbase", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventBase",893,G__Selection_Dict_684_0_3, 105, G__get_linked_tagnum(&G__Selection_DictLN_EventBase), -1, 0, 1, 1, 1, 0, "u 'EventBase' - 1 - evbase", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Selection_Dict_684_0_4, 117, G__get_linked_tagnum(&G__Selection_DictLN_EventBase), -1, 1, 1, 1, 1, 0, "u 'EventBase' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuonSel",995,G__Selection_Dict_684_0_5, 85, G__get_linked_tagnum(&G__Selection_DictLN_MuonSelection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetElectronSel",1408,G__Selection_Dict_684_0_6, 85, G__get_linked_tagnum(&G__Selection_DictLN_ElectronSelection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetSel",871,G__Selection_Dict_684_0_7, 85, G__get_linked_tagnum(&G__Selection_DictLN_JetSelection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTauSel",878,G__Selection_Dict_684_0_8, 85, G__get_linked_tagnum(&G__Selection_DictLN_TauSelection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTruthSel",1115,G__Selection_Dict_684_0_9, 85, G__get_linked_tagnum(&G__Selection_DictLN_GenSelection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventSel",1094,G__Selection_Dict_684_0_10, 85, G__get_linked_tagnum(&G__Selection_DictLN_EventSelection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseMuons",1197,G__Selection_Dict_684_0_11, 117, G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgR), G__defined_typename("vector<snu::KMuon>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseElectrons",1610,G__Selection_Dict_684_0_12, 117, G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgR), G__defined_typename("vector<snu::KElectron>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseJets",1073,G__Selection_Dict_684_0_13, 117, G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgR), G__defined_typename("vector<snu::KJet>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseTaus",1080,G__Selection_Dict_684_0_14, 117, G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgR), G__defined_typename("vector<snu::KTau>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseTruth",1202,G__Selection_Dict_684_0_15, 117, G__get_linked_tagnum(&G__Selection_DictLN_vectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgR), G__defined_typename("vector<snu::KTruth>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseEvent",1181,G__Selection_Dict_684_0_16, 117, G__get_linked_tagnum(&G__Selection_DictLN_snucLcLKEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventBase",893,G__Selection_Dict_684_0_17, 105, G__get_linked_tagnum(&G__Selection_DictLN_EventBase), -1, 0, 1, 1, 1, 0, "u 'EventBase' - 11 - sb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventBase",1181,G__Selection_Dict_684_0_18, 117, G__get_linked_tagnum(&G__Selection_DictLN_LQEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventBase", 1019, G__Selection_Dict_684_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSelection_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSelection_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSelection_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__Selection_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__Selection_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_snu = { "snu" , 110 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEsnucLcLKParticlecOallocatorlEsnucLcLKParticlegRsPgR = { "vector<snu::KParticle,allocator<snu::KParticle> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKParticlecOallocatorlEsnucLcLKParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<snu::KParticle,allocator<snu::KParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_snucLcLKEvent = { "snu::KEvent" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_LQEvent = { "LQEvent" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgR = { "vector<snu::KMuon,allocator<snu::KMuon> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<snu::KMuon,allocator<snu::KMuon> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgR = { "vector<snu::KElectron,allocator<snu::KElectron> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<snu::KElectron,allocator<snu::KElectron> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgR = { "vector<snu::KTau,allocator<snu::KTau> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgRcLcLiteratorgR = { "reverse_iterator<vector<snu::KTau,allocator<snu::KTau> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgR = { "vector<snu::KJet,allocator<snu::KJet> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<snu::KJet,allocator<snu::KJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_vectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgR = { "vector<snu::KTruth,allocator<snu::KTruth> >" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<snu::KTruth,allocator<snu::KTruth> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_BaseSelection = { "BaseSelection" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_ElectronSelection = { "ElectronSelection" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_MuonSelection = { "MuonSelection" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_TauSelection = { "TauSelection" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_JetSelection = { "JetSelection" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_GenSelection = { "GenSelection" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_EventSelection = { "EventSelection" , 99 , -1 };
G__linked_taginfo G__Selection_DictLN_EventBase = { "EventBase" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSelection_Dict() {
  G__Selection_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__Selection_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__Selection_DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__Selection_DictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_snu.tagnum = -1 ;
  G__Selection_DictLN_vectorlEsnucLcLKParticlecOallocatorlEsnucLcLKParticlegRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKParticlecOallocatorlEsnucLcLKParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_snucLcLKEvent.tagnum = -1 ;
  G__Selection_DictLN_LQEvent.tagnum = -1 ;
  G__Selection_DictLN_vectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_vectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgR.tagnum = -1 ;
  G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Selection_DictLN_BaseSelection.tagnum = -1 ;
  G__Selection_DictLN_ElectronSelection.tagnum = -1 ;
  G__Selection_DictLN_MuonSelection.tagnum = -1 ;
  G__Selection_DictLN_TauSelection.tagnum = -1 ;
  G__Selection_DictLN_JetSelection.tagnum = -1 ;
  G__Selection_DictLN_GenSelection.tagnum = -1 ;
  G__Selection_DictLN_EventSelection.tagnum = -1 ;
  G__Selection_DictLN_EventBase.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSelection_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_snu);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEsnucLcLKParticlecOallocatorlEsnucLcLKParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKParticlecOallocatorlEsnucLcLKParticlegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_snucLcLKEvent);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_LQEvent);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKMuoncOallocatorlEsnucLcLKMuongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKElectroncOallocatorlEsnucLcLKElectrongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKTaucOallocatorlEsnucLcLKTaugRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKJetcOallocatorlEsnucLcLKJetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_vectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgR);
   G__get_linked_tagnum_fwd(&G__Selection_DictLN_reverse_iteratorlEvectorlEsnucLcLKTruthcOallocatorlEsnucLcLKTruthgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Selection_DictLN_BaseSelection),sizeof(BaseSelection),-1,265984,(char*)NULL,G__setup_memvarBaseSelection,G__setup_memfuncBaseSelection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Selection_DictLN_ElectronSelection),sizeof(ElectronSelection),-1,298496,(char*)NULL,G__setup_memvarElectronSelection,G__setup_memfuncElectronSelection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Selection_DictLN_MuonSelection),sizeof(MuonSelection),-1,298496,(char*)NULL,G__setup_memvarMuonSelection,G__setup_memfuncMuonSelection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Selection_DictLN_TauSelection),sizeof(TauSelection),-1,263424,(char*)NULL,G__setup_memvarTauSelection,G__setup_memfuncTauSelection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Selection_DictLN_JetSelection),sizeof(JetSelection),-1,298496,(char*)NULL,G__setup_memvarJetSelection,G__setup_memfuncJetSelection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Selection_DictLN_GenSelection),sizeof(GenSelection),-1,298752,(char*)NULL,G__setup_memvarGenSelection,G__setup_memfuncGenSelection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Selection_DictLN_EventSelection),sizeof(EventSelection),-1,263424,(char*)NULL,G__setup_memvarEventSelection,G__setup_memfuncEventSelection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Selection_DictLN_EventBase),sizeof(EventBase),-1,298752,(char*)NULL,G__setup_memvarEventBase,G__setup_memfuncEventBase);
}
extern "C" void G__cpp_setupSelection_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSelection_Dict()");
  G__set_cpp_environmentSelection_Dict();
  G__cpp_setup_tagtableSelection_Dict();

  G__cpp_setup_inheritanceSelection_Dict();

  G__cpp_setup_typetableSelection_Dict();

  G__cpp_setup_memvarSelection_Dict();

  G__cpp_setup_memfuncSelection_Dict();
  G__cpp_setup_globalSelection_Dict();
  G__cpp_setup_funcSelection_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSelection_Dict();
  return;
}
class G__cpp_setup_initSelection_Dict {
  public:
    G__cpp_setup_initSelection_Dict() { G__add_setup_func("Selection_Dict",(G__incsetup)(&G__cpp_setupSelection_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSelection_Dict() { G__remove_setup_func("Selection_Dict"); }
};
G__cpp_setup_initSelection_Dict G__cpp_setup_initializerSelection_Dict;

